name: Build and Release Electron App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd frontend
        npm install
        
    - name: Build application
      run: |
        cd frontend
        npm run build
        
    - name: Build Electron app (Linux)
      run: |
        cd frontend
        npm run dist -- --linux
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: flux-creator-linux
        path: |
          frontend/dist-packages/*.AppImage
          frontend/dist-packages/*.snap
          frontend/dist-packages/*.deb
          frontend/dist-packages/*.rpm
        if-no-files-found: ignore

  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd frontend
        npm install
        
    - name: Build application
      run: |
        cd frontend
        npm run build
        
    - name: Build Electron app (macOS)
      run: |
        cd frontend
        npm run dist -- --mac
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CSC_IDENTITY_AUTO_DISCOVERY: false
        
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: flux-creator-macos
        path: |
          frontend/dist-packages/*.dmg
          frontend/dist-packages/*.zip
        if-no-files-found: ignore

  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd frontend
        npm install
        
    - name: Build application
      run: |
        cd frontend
        npm run build
        
    - name: Build Electron app (Windows)
      run: |
        cd frontend
        npm run dist -- --win
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: flux-creator-windows
        path: |
          frontend/dist-packages/*.exe
          frontend/dist-packages/*.msi
        if-no-files-found: ignore
        
  release:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          flux-creator-linux/*
          flux-creator-macos/*
          flux-creator-windows/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}